knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE)
library(dplyr)
library(stringr)
library(tidytext)
spam <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/spam.csv"))
nrow(filter(spam, spam$type=="ham"))
nrow(filter(spam, spam$type=="spam"))
spam <- mutate(spam, text=as.character(text))
spam <- spam %>%
tidytext::unnest_tokens(word, text)
spamJoin <- spam %>%
anti_join(tidytext::stop_words, by = "word")
h <-  as.data.frame(table(filter(spamJoin, type=="ham")))
h <- h[order(-h$Freq), , drop=FALSE]
h[1:10,]
h <- filter(h, Freq>1)
dtm <- data.frame(row.names = 1:5572)
View(dtm)
spam[1]
spam[1,]
spam[2,]
spam[0,]
spam[1,0]
subset(spam[1])
subset(spam[1,])
subset(spam[1,],1)
rownames[spam[1,]]
rownames[spam
]
View(dtm)
dtm.rownames
dimnames(spam)
dimnames(spam[1])
dimnames(spam)[1]
dimnames(spam)[[1]]
dimnames(spam)[1]
dimnames(spam[1,])
dimnames(spam[1,]) == 1
dimnames(spam[1,])[[1]] == 1
dimnames(spam[2,])[[1]] == 1
dimnames(spam[2,])[[1]] == 1.1
grepl(dimnames(spam[2,])[[1]], 1.)
grepl(dimnames(spam[2,])[[1]], "1.")
?grepl
grepl("1",dimnames(spam[2,])[[1]])
grepl(1,dimnames(spam[2,])[[1]])
grepl(1.,dimnames(spam[2,])[[1]])
grepl(1.1,dimnames(spam[2,])[[1]])
grepl(1.2,dimnames(spam[2,])[[1]])
i=1
grepl(i,dimnames(spam[2,])[[1]])
grepl(i+".",dimnames(spam[2,])[[1]])
grepl(i".",dimnames(spam[2,])[[1]])
grepl(i.,dimnames(spam[2,])[[1]])
i=1.
i="1."
grepl(i,dimnames(spam[2,])[[1]])
j = 1
k = j+"."
k = paste(i,".")
k = paste(j,".")
k = paste0(j,".")
grepl(i,dimnames(spam[2,])[[1]])
grepl(i,dimnames(spam[1,])[[1]])
grepl(i,dimnames(spam[3,])[[1]])
spam[1,]
? data.frame
h[1,2]
h[1,]
h[1,1]
h[1,2]
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(drm,h[i,2])
}
for(i in 1:nrow(h)){
dtm <- cbind(dtm,h[i,2])
}
View(dtm)
?cbind
dtm <- data.frame(row.names = 1:5572)
names(dtm)[1]
for(i in 1:nrow(h)){
dtm <- cbind(dtm)
names(dtm)[i] <- h[i,2]
}
dtm <- cbind(dtm)
View(dtm)
View(dtm,0)
View(dtm,"1")
dtm <- cbind(dtm,0)
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(dtm,0)
names(dtm)[i] <- h[i,2]
}
h[1,2]
h[[1,2]]
dtm <- data.frame(row.names = 1:5572)
dtm <- cbind(dtm,0)
names(dtm)[i] <- h[i,2]
i = 1
names(dtm)[i] <- h[i,2]
h[i,2]
h[i,2]
names(dtm)[i]
names(dtm)[i] <- 2
h[i,2]
names(dtm)[i] <- h[i,2]
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
names(dtm)[i] <- h[i,2]
}
View(h)
h[2,2]
View(h)
names(dtm)[i]
names(dtm)[i] <- paste(h[i,2])
dtm <- data.frame(row.names = 1:5572)
names(dtm)[i] <- paste($h[i,2])
names(dtm)[i] <- paste(h[i,2])
i = 3
h[i,2]
h[i,3]
h[4,2]
h[,2]
names(dtm) <- h[,2]
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
names(dtm) <- h[,2]
}
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
names(dtm) <- h[,2]
nrow(h)
h <-  as.data.frame(table(filter(spamJoin, type=="ham")))
h <- h[order(-h$Freq), , drop=FALSE]
h[1:10,]
h <- filter(h, Freq>1)
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
names(dtm) <- h[,2]
dtm
ncol(dtm)
i = 1
spam[1,1]
spam[1,2]
dtm[1,"2"]
dtm[1,spam[1,2]]
dtm[1,spam[1,3]]
dtm[1,spam[1,4]]
spam[1,3]
dtm[1,spam[3,2]]
dtm[1,spam[4,2]]
dtm[1,spam[5,2]]
!is.null(dtm[1,spam[4,2]])
!is.null(dtm[1,spam[5,2]])
grepl(paste0(i,"."),dimnames(spam[i,])[[1]])
grepl(!paste0(i,"."),dimnames(spam[i,])[[1]])
!grepl(paste0(i,"."),dimnames(spam[i,])[[1]])
!grepl(paste0(i+1,"."),dimnames(spam[i,])[[1]])
!grepl(i+1,dimnames(spam[i,])[[1]])
!grepl(i+1,dimnames(spam[2,])[[1]])
!grepl(i+1,dimnames(spam[5,])[[1]])
!grepl(i+1,dimnames(spam[6,])[[1]])
!grepl(i+1,dimnames(spam[10,])[[1]])
!grepl(i+1,dimnames(spam[30,])[[1]])
dimnames(spam[30,])[[1]]
!grepl(i+1,dimnames(spam[i,])[[1]])
!grepl(i+1,dimnames(spam[j,])[[1]])
!grepl(2,dimnames(spam[2,])[[1]])
!grepl(1,dimnames(spam[2,])[[1]])
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE)
library(dplyr)
library(stringr)
library(tidytext)
dtm <- data.frame(row.names = 1:5572)
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
names(dtm) <- h[,2]
i <- 1
!grepl(i+1,dimnames(spam[j,])[[1]])
if(!is.null(dtm[1,spam[i,2]]))
c
!is.null(dtm[1,spam[i,2]])
h <-  as.data.frame(table(filter(spamJoin, type=="ham")))
h <- h[order(-h$Freq), , drop=FALSE]
h[1:10,]
h <- filter(h, Freq>1)
# create the table
dtm <- data.frame(row.names = 1:5572)
# insert the columns
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
#name the columns
names(dtm) <- h[,2]
for(i in 1:nrow(spam)){
j <- 1;
while(!grepl(i+1,dimnames(spam[j,])[[1]])){
#check if column exists
if(!is.null(dtm[1,spam[i,2]])){
dtm[1,spam[i,2]] <- TRUE
}
}
}
h <-  as.data.frame(table(filter(spamJoin, type=="ham")))
h <- h[order(-h$Freq), , drop=FALSE]
h[1:10,]
h <- filter(h, Freq>1)
# create the table
dtm <- data.frame(row.names = 1:5572)
# insert the columns
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
#name the columns
names(dtm) <- h[,2]
for(i in 1:nrow(spam)){
j <- 1;
while(!grepl(i+1,dimnames(spam[j,])[[1]])){
if(j>nrow(spam)){
break;
}
#check if column exists
if(!is.null(dtm[1,spam[i,2]])){
dtm[1,spam[i,2]] <- TRUE
}
}
}
j <- 1;
while(!grepl(i+1,dimnames(spam[j,])[[1]])){
if(j>nrow(spam)){
break;
}
#check if column exists
if(!is.null(dtm[1,spam[i,2]])){
dtm[1,spam[i,2]] <- TRUE
}
}
while(!grepl(i+1,dimnames(spam[j,])[[1]])){
if(j>nrow(spam)){
break;
}
#check if column exists
if(!is.null(dtm[1,spam[i,2]])){
dtm[1,spam[i,2]] <- TRUE
}
j <- j+1
}
for(i in 1:nrow(spam)){
j <- 1;
while(!grepl(i+1,dimnames(spam[j,])[[1]])){
if(j>nrow(spam)){
break;
}
#check if column exists
if(!is.null(dtm[1,spam[i,2]])){
dtm[1,spam[i,2]] <- TRUE
}
j <- j+1
}
}
h <-  as.data.frame(table(filter(spamJoin, type=="ham")))
h <- h[order(-h$Freq), , drop=FALSE]
h[1:10,]
h <- filter(h, Freq>1)
# create the table
dtm <- data.frame(row.names = 1:5572)
# insert the columns
for(i in 1:nrow(h)){
dtm <- cbind(dtm,FALSE)
}
#name the columns
names(dtm) <- h[,2]
for(i in 1:nrow(spam)){
j <- 1;
while(!grepl(i+1,dimnames(spam[j,])[[1]])){
if(j>nrow(spam)){
break;
}
#check if column exists
if(!is.null(dtm[1,spam[i,2]])){
dtm[1,spam[i,2]] <- TRUE
}
j <- j+1
}
}
1%7
modulo
1 %% 7
filter(spam, type="spam")
filter(spam, type=="spam")
spamspam <- filter(spam, type=="spam")
seq(1, nrow(spamspam, by=7))
?seq
seq(from=1, to=nrow(spamspam, by=7))
seq(from=1, to=nrow(spamspam), by=7))
seq(1, nrow(spamspam), by=7))
seq(1, nrow(spamspam), by=7)
training <- spamspam[seq(1, nrow(spamspam), by=7)]
spamspam <- filter(spam, type=="spam")
training <- spamspam[seq(1, nrow(spamspam), by=7)]
training <- spamspam[,seq(1, nrow(spamspam), by=7)]
training <- spamspam[seq(1, nrow(spamspam), by=7),]
View(training)
nrow(spamspam)/7
round(nrow(spamspam)/7)
round(nrow(spamspam)*0.7)
spamspam <- filter(spam, type=="spam")
training <- spamspam[(1:round(nrow(spamspam)*0.7)),]
test <- spamspam[(round(nrow(spamspam)*0.7))+1:nrow(spamspam),]
1:round(nrow(spamspam)*0.7)
round(nrow(spamspam)*0.7)
test <- 0
training <- 0
training <- spamspam[(1:round(nrow(spamspam)*0.7)),]
test <- spamspam[(round(nrow(spamspam)*0.7))+1:nrow(spamspam),]
View(test)
View(training)
test <- spamspam[((round(nrow(spamspam)*0.7))+1):nrow(spamspam),]
View(test)
View(training)
library(tidyr)
?unite
training <- unite(training, 1)
training <- unite(training, spamham)
training <- unite(training, spamham, remove = FALSE)
training[1300,1] <- 5
training[1200,1] <- 5
training[1,13000] <- 5
training[1,12910] <- 5
training[1,12]
training[12,1]
training[12000,1]
training[12908,1]
training[12909,1]
training[12909,1] <- 5
training[12909,] <- 5
spamham[(1:round(nrow(spamham)*0.7)),]
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE)
library(dplyr)
library(stringr)
library(tidytext)
library(tidyr)
spamham <- filter(spam, type=="ham")
spamham <- filter(spam, type=="ham")
spamham[(1:round(nrow(spamham)*0.7)),]
training <- data.frame(spamspam[(1:round(nrow(spamspam)*0.7)),],spamham[(1:round(nrow(spamham)*0.7)),])
training <- spamspam[(1:round(nrow(spamspam)*0.7)),]
?rbind()
rbind(training, spamham[1,])
training <- rbind(training, spamham[1,])
View(training)
training <- rbind(training, spamham[(1:round(nrow(spamham)*0.7)),])
View(training)
training <- spamspam[(1:round(nrow(spamspam)*0.7)),]
training <- rbind(training, spamham[(1:round(nrow(spamham)*0.7)),])
training <- spamspam[(1:round(nrow(spamspam)*0.7)),]
test <- spamspam[((round(nrow(spamspam)*0.7))+1):nrow(spamspam),]
training <- rbind(training, spamham[(1:round(nrow(spamham)*0.7)),])
test <- rbind(test, spamham[((round(nrow(spamham)*0.7))+1):nrow(spamham),])
?set.seed()
e1071
e1071:naiveBayes()
install.packages("e1071")
library(e1071)
e1071:naiveBayes()
?e1071:naiveBayes()
?e1071
??e1071
e1071::naiveBayes()
?e1071::naiveBayes()
e1071::naiveBayes(training)
e1071::naiveBayes(training, word)
e1071::naiveBayes(training, type)
?e1071::naiveBayes(training, type)
??e1071::naiveBayes(training, type)
e1071::naiveBayes(training$type)
e1071::naiveBayes(training, type)
e1071::naiveBayes(training, training$type)
bayes <- e1071::naiveBayes(training, training$type)
bayes[1:10]
bayes[1]
bayes[1:2]
